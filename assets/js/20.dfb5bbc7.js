(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{489:function(v,_,a){"use strict";a.r(_);var t=a(38),s=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("p",[v._v("重要知识点")]),v._v(" "),a("h4",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[v._v("#")]),v._v(" redis")]),v._v(" "),a("h6",{attrs:{id:"_5种数据结构-李岱融"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5种数据结构-李岱融"}},[v._v("#")]),v._v(" 5种数据结构（李岱融）")]),v._v(" "),a("ol",[a("li",[v._v("string 的SDS")]),v._v(" "),a("li",[v._v("hash 得渐进式hash")]),v._v(" "),a("li",[v._v("zset的跳跃表")])]),v._v(" "),a("h6",{attrs:{id:"持久化-朱春涛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久化-朱春涛"}},[v._v("#")]),v._v(" 持久化 （朱春涛）")]),v._v(" "),a("ol",[a("li",[v._v("AOF(指令) AOF重写机制")]),v._v(" "),a("li",[v._v("RDB(快照)")]),v._v(" "),a("li",[v._v("AOF与RDB有缺点对比")]),v._v(" "),a("li",[v._v("AOF 与RDB的适应条件 增量 存量")])]),v._v(" "),a("h6",{attrs:{id:"淘汰策略-肖志强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#淘汰策略-肖志强"}},[v._v("#")]),v._v(" 淘汰策略（肖志强）")]),v._v(" "),a("ol",[a("li",[v._v("默认达到阈值报错")]),v._v(" "),a("li",[v._v("LRU(1. 只对设置过期时间的keylru 2. 对所有keylru)")]),v._v(" "),a("li",[v._v("随机淘汰(同上)")]),v._v(" "),a("li",[v._v("根据过期时间")])]),v._v(" "),a("h6",{attrs:{id:"redis三种缓存问题与解决方案-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis三种缓存问题与解决方案-任基伟"}},[v._v("#")]),v._v(" redis三种缓存问题与解决方案（任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("缓存穿透(布隆过滤器)")]),v._v(" "),a("li",[v._v("缓存击穿")]),v._v(" "),a("li",[v._v("缓存雪崩")])]),v._v(" "),a("h6",{attrs:{id:"redis主从-slave-蒋继龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis主从-slave-蒋继龙"}},[v._v("#")]),v._v(" redis主从(slave) （蒋继龙）")]),v._v(" "),a("ol",[a("li",[v._v("sync 原理与问题")]),v._v(" "),a("li",[v._v("psyn 如何优化原理")]),v._v(" "),a("li",[v._v("哨兵模式 哨兵如何互相发现 哨兵选举leader(raft)")]),v._v(" "),a("li",[v._v("主观下线 客观下线 新master的选举(5秒未回复/根据优先级排序,复制偏移大的)")]),v._v(" "),a("li",[v._v("redis集群 gossip协议")]),v._v(" "),a("li",[v._v("集群如何分片 槽 一致性hash算法")]),v._v(" "),a("li",[v._v("集群重新分片")])]),v._v(" "),a("h6",{attrs:{id:"补充-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充-任基伟"}},[v._v("#")]),v._v(" 补充 （任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("redis为什么是单线程为什么快？")]),v._v(" "),a("li",[v._v("redis缓存一致性")])]),v._v(" "),a("h6",{attrs:{id:"完成后所有人补充修改完善"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完成后所有人补充修改完善"}},[v._v("#")]),v._v(" 完成后所有人补充修改完善")]),v._v(" "),a("hr"),v._v(" "),a("h4",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[v._v("#")]),v._v(" mysql")]),v._v(" "),a("h6",{attrs:{id:"索引-李岱融"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引-李岱融"}},[v._v("#")]),v._v(" 索引 （李岱融）")]),v._v(" "),a("ol",[a("li",[v._v("b与b+树")]),v._v(" "),a("li",[v._v("b+与hash的对比")]),v._v(" "),a("li",[v._v("聚集索引 非聚集索引")]),v._v(" "),a("li",[v._v("二级索引与回表优化 (索引覆盖，索引下堆)")]),v._v(" "),a("li",[v._v("联合索引最左匹配原则")]),v._v(" "),a("li",[v._v("索引无效的原因(索引优化器)")]),v._v(" "),a("li",[v._v("加索引的规则如何验证")]),v._v(" "),a("li",[v._v("如何提升吞吐量，你觉得加缓存会有啥问题，如何避免穿透的，对缓存的实现原理有了解吗，有考虑过不加缓存提升性能吗，多节点如何协作，有了解过一致性哈希和raft算法吗")]),v._v(" "),a("li",[v._v("全文索引 创建索引时需要注意啥")])]),v._v(" "),a("h6",{attrs:{id:"锁-肖志强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锁-肖志强"}},[v._v("#")]),v._v(" 锁 （肖志强）")]),v._v(" "),a("ol",[a("li",[v._v("读锁 写锁 意向锁")]),v._v(" "),a("li",[v._v("乐观锁 悲观锁")]),v._v(" "),a("li",[v._v("记录锁 间隙锁 next-key锁")]),v._v(" "),a("li",[v._v("undolog mvcc 日志 当前读快照读")]),v._v(" "),a("li",[v._v("死锁update")])]),v._v(" "),a("h6",{attrs:{id:"事务-蒋继龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务-蒋继龙"}},[v._v("#")]),v._v(" 事务 （蒋继龙）")]),v._v(" "),a("ol",[a("li",[v._v("ACID")])]),v._v(" "),a("ul",[a("li",[v._v("解释原子性 一致性 隔离性 持久性 重点一致性")])]),v._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[v._v("脏读 不可重复读 幻读(事务在插入已经检查过不存在的记录时，惊奇的发现这些数据已经存在了，之前的检测获取到的数据如同鬼影一般。inoodb rr解决幻读)")]),v._v(" "),a("li",[v._v("事务隔离级别")]),v._v(" "),a("li",[v._v("事务如何实现 redolog undolog")]),v._v(" "),a("li",[v._v("如何处理事务")])]),v._v(" "),a("h6",{attrs:{id:"常用sql-朱春涛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用sql-朱春涛"}},[v._v("#")]),v._v(" 常用sql （朱春涛）")]),v._v(" "),a("ol",[a("li",[v._v("增删改差 创建索引")]),v._v(" "),a("li",[v._v("explain")])]),v._v(" "),a("h6",{attrs:{id:"mysql架构与sql执行流程-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql架构与sql执行流程-任基伟"}},[v._v("#")]),v._v(" mysql架构与sql执行流程 （任基伟）")]),v._v(" "),a("h6",{attrs:{id:"其他-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他-任基伟"}},[v._v("#")]),v._v(" 其他 （任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("左连接,右连接 外键")]),v._v(" "),a("li",[v._v("数据库的三大范式")]),v._v(" "),a("li",[v._v("myslam与inoodb对比")]),v._v(" "),a("li",[v._v("如何分析慢sql")]),v._v(" "),a("li",[v._v("如何看sql有没有走索引")]),v._v(" "),a("li",[v._v("ICP优化")]),v._v(" "),a("li",[v._v("MRR优化")]),v._v(" "),a("li",[v._v("建索引的规范或者标准：")]),v._v(" "),a("li",[v._v("从宏观角度说一下数据库，“是怎么做出来的”")]),v._v(" "),a("li",[v._v("mysql的文件系统，是怎么找数据的？")]),v._v(" "),a("li",[v._v("数据量特别大的时候 mysql会怎么去做")]),v._v(" "),a("li",[v._v("常用sql")])]),v._v(" "),a("h6",{attrs:{id:"完成后所有人补充修改完善-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完成后所有人补充修改完善-2"}},[v._v("#")]),v._v(" 完成后所有人补充修改完善")]),v._v(" "),a("hr"),v._v(" "),a("h4",{attrs:{id:"jvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[v._v("#")]),v._v(" jvm")]),v._v(" "),a("h6",{attrs:{id:"jvm内存区域-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm内存区域-任基伟"}},[v._v("#")]),v._v(" jvm内存区域（任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("功能是啥 那些线程私有, 那些线程共用")])]),v._v(" "),a("h6",{attrs:{id:"垃圾回收算法-蒋继龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收算法-蒋继龙"}},[v._v("#")]),v._v(" 垃圾回收算法（蒋继龙）")]),v._v(" "),a("ol",[a("li",[v._v("可达性分析 gcroot根(栈引用对象+方法区静态/常量的引用)")]),v._v(" "),a("li",[v._v("标记清除(mark-sweep)")]),v._v(" "),a("li",[v._v("标记整理(mark-compact)")]),v._v(" "),a("li",[v._v("复制算法")]),v._v(" "),a("li",[v._v("堆的分区与分代收集")])]),v._v(" "),a("h6",{attrs:{id:"垃圾收集器-肖志强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集器-肖志强"}},[v._v("#")]),v._v(" 垃圾收集器（肖志强）")]),v._v(" "),a("ol",[a("li",[v._v("serial(高响应比)  新生代")]),v._v(" "),a("li",[v._v("parnew 唯一和cms配合的")]),v._v(" "),a("li",[v._v("paralel(吞吐量优先)")]),v._v(" "),a("li",[v._v("Serial Old (标记整理)  老年")]),v._v(" "),a("li",[v._v("Parallel Old (标记整理高吞吐量)")]),v._v(" "),a("li",[v._v("CMS (标记清除,并发收集，底停顿 浮动垃圾)")]),v._v(" "),a("li",[v._v("G1(region rset)")])]),v._v(" "),a("h6",{attrs:{id:"类加载-朱春涛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类加载-朱春涛"}},[v._v("#")]),v._v(" 类加载（朱春涛）")]),v._v(" "),a("ol",[a("li",[v._v("类加载器")]),v._v(" "),a("li",[v._v("类加载过程 加载 链接 初始化")]),v._v(" "),a("li",[v._v("双亲委派机制 何时打破双亲委派")])]),v._v(" "),a("h6",{attrs:{id:"调优-李岱融"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调优-李岱融"}},[v._v("#")]),v._v(" 调优 （李岱融）")]),v._v(" "),a("ol",[a("li",[v._v("有哪些调优工具")])]),v._v(" "),a("ul",[a("li",[v._v("jinfo(根据进程id查找java的进程信息)")]),v._v(" "),a("li",[v._v("jstat -class (类加载个数  和花费的加载时间 以及类加载站的内存)")]),v._v(" "),a("li",[v._v("jstat -gc 获取gc详情")]),v._v(" "),a("li",[v._v("jmap 查看内存分配情况")]),v._v(" "),a("li",[v._v("jstack 线程跟踪堆栈信息(定位死循环 死锁)")])]),v._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[v._v("如何定位cpu飙升")])]),v._v(" "),a("ul",[a("li",[v._v("top -c 定位 cpu 占用率高的进程")]),v._v(" "),a("li",[v._v("定位cpu消耗的线程 top -Hp 522 (PID)")]),v._v(" "),a("li",[v._v("定位代码 jstack 522 |grep '0x522（522的16进制）' -CS -color")])]),v._v(" "),a("h4",{attrs:{id:"并发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发"}},[v._v("#")]),v._v(" 并发")]),v._v(" "),a("h6",{attrs:{id:"jmm-李岱融"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jmm-李岱融"}},[v._v("#")]),v._v(" JMM（李岱融）")]),v._v(" "),a("ol",[a("li",[v._v("原子性 有序性 可见性")]),v._v(" "),a("li",[v._v("先行先发生原则 存在意义 具体内容")]),v._v(" "),a("li",[v._v("内存模型")])]),v._v(" "),a("h6",{attrs:{id:"volatile-蒋继龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volatile-蒋继龙"}},[v._v("#")]),v._v(" Volatile（蒋继龙）")]),v._v(" "),a("ol",[a("li",[v._v("解决可见性 lock指令 cpu总线嗅探机制")]),v._v(" "),a("li",[v._v("内存屏障禁止指令重排")]),v._v(" "),a("li",[v._v("volatile 的单例模式 doublecheck")])]),v._v(" "),a("h6",{attrs:{id:"synchronized-肖志强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronized-肖志强"}},[v._v("#")]),v._v(" Synchronized（肖志强）")]),v._v(" "),a("ol",[a("li",[v._v("原理 对象头 monitor对象 指令 monitorenter monitorexit 进入数 state 可重入")]),v._v(" "),a("li",[v._v("monitor对象 _WaitSet 和 _EntryList队列")]),v._v(" "),a("li",[v._v("对象头 markword")]),v._v(" "),a("li",[v._v("锁膨胀")])]),v._v(" "),a("h6",{attrs:{id:"cas-自旋锁-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cas-自旋锁-任基伟"}},[v._v("#")]),v._v(" CAS 自旋锁（任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("cas的ABA问题")]),v._v(" "),a("li",[v._v("原子类的原理")]),v._v(" "),a("li",[v._v("unsafe类")]),v._v(" "),a("li",[v._v("CAS的不足")])]),v._v(" "),a("h6",{attrs:{id:"aqs-朱春涛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aqs-朱春涛"}},[v._v("#")]),v._v(" AQS（朱春涛）")]),v._v(" "),a("ol",[a("li",[v._v("同步队列器")]),v._v(" "),a("li",[v._v("公平非公平")]),v._v(" "),a("li",[v._v("加锁 解锁")]),v._v(" "),a("li",[v._v("aqs为甚么维护双向链表")]),v._v(" "),a("li",[v._v("为什么唤醒链表节点从后向前找最靠前的waitstatus小于0的节点")])]),v._v(" "),a("h6",{attrs:{id:"线程池-肖志强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程池-肖志强"}},[v._v("#")]),v._v(" 线程池（肖志强）")]),v._v(" "),a("ol",[a("li",[v._v("核心参数")]),v._v(" "),a("li",[v._v("拒绝策略")]),v._v(" "),a("li",[v._v("四类线程池 SingleThreadpool FixedThreadpool  CacheThreadpool ScheduledThreadpool")]),v._v(" "),a("li",[v._v("不推荐使用api创建 因为那个对列大小默认很大")])]),v._v(" "),a("h6",{attrs:{id:"juc工具类-蒋继龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#juc工具类-蒋继龙"}},[v._v("#")]),v._v(" JUC工具类（蒋继龙）")]),v._v(" "),a("ol",[a("li",[v._v("栅栏器 countdownlcatch")]),v._v(" "),a("li",[v._v("循环屏障 cyclicbarrier")]),v._v(" "),a("li",[v._v("信号量 semaphore")]),v._v(" "),a("li",[v._v("concurunthashmap (1.7 分段锁 segment 1.8 cas(为null)+syc(当hash冲突时))")]),v._v(" "),a("li",[v._v("copywriteArrayList")])]),v._v(" "),a("h6",{attrs:{id:"threadlocal-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-任基伟"}},[v._v("#")]),v._v(" Threadlocal（任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("原理")]),v._v(" "),a("li",[v._v("内存泄露")]),v._v(" "),a("li",[v._v("父子线程传值")])]),v._v(" "),a("h4",{attrs:{id:"计网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计网"}},[v._v("#")]),v._v(" 计网")]),v._v(" "),a("h6",{attrs:{id:"基本概念-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念-任基伟"}},[v._v("#")]),v._v(" 基本概念 （任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("5/7层网络模型")]),v._v(" "),a("li",[v._v("ip地址的格式")]),v._v(" "),a("li",[v._v("tcp与udp的对比")])]),v._v(" "),a("h6",{attrs:{id:"http-朱春涛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-朱春涛"}},[v._v("#")]),v._v(" HTTP （朱春涛）")]),v._v(" "),a("ol",[a("li",[v._v("请求报文 响应报文 组成 常用字段")]),v._v(" "),a("li",[v._v("状态码含义")]),v._v(" "),a("li",[v._v("http 1.0的问题 与http1.1 keep-alive, 管线化")]),v._v(" "),a("li",[v._v("1.1的问题和1.x SPDY")]),v._v(" "),a("li",[v._v("http2.0的特点")]),v._v(" "),a("li",[v._v("https的交互流程")]),v._v(" "),a("li",[v._v("升级websocket")]),v._v(" "),a("li",[v._v("get post的对比 option... post是幂等的？")]),v._v(" "),a("li",[v._v("请求方式 GET POST DELETE PUT OPTIONS HEAD")]),v._v(" "),a("li",[v._v("DNS全过程")])]),v._v(" "),a("h6",{attrs:{id:"tcp-蒋继龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-蒋继龙"}},[v._v("#")]),v._v(" TCP （蒋继龙）")]),v._v(" "),a("ol",[a("li",[v._v("TCP报文格式")]),v._v(" "),a("li",[v._v("三次握手 四次挥手 三次握手为啥是三次，两次行不行为什么，四次挥手，三次行不行为什么")]),v._v(" "),a("li",[v._v("TCP的有限状态机 11种状态")]),v._v(" "),a("li",[v._v("TCP的可靠传输 累积确认 超时重传 快重传 滑动窗口 流量控制")]),v._v(" "),a("li",[v._v("拥塞控制 慢开始 快恢复")]),v._v(" "),a("li",[v._v("粘包黏包")]),v._v(" "),a("li",[v._v("遇到过rst状态吗")]),v._v(" "),a("li",[v._v("你了解过timewait状态吗，作用是啥，timewait会出现在哪一边为什么，如果服务器端发现大量timewait你会如何处理")]),v._v(" "),a("li",[v._v("了解过listen队列和accept队列吗？如果accept队列不够（Linux默认是128）会导致啥问题，你有哪些解决方法")])]),v._v(" "),a("h6",{attrs:{id:"ip-李岱融"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-李岱融"}},[v._v("#")]),v._v(" IP （李岱融）")]),v._v(" "),a("ol",[a("li",[v._v("ip头部")]),v._v(" "),a("li",[v._v("ip分片")]),v._v(" "),a("li",[v._v("arp地址解析")]),v._v(" "),a("li",[v._v("icmp traceroute / ping的原理")])]),v._v(" "),a("h4",{attrs:{id:"操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[v._v("#")]),v._v(" 操作系统")]),v._v(" "),a("h6",{attrs:{id:"内存管理-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存管理-任基伟"}},[v._v("#")]),v._v(" 内存管理 （任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("逻辑内存 物理内存 为什么要逻辑内存")]),v._v(" "),a("li",[v._v("分页")]),v._v(" "),a("li",[v._v("页式存储如何将逻辑地址找到物理地址")]),v._v(" "),a("li",[v._v("内存分配算法 首次适配 最佳适配 最差适配 下次适配")]),v._v(" "),a("li",[v._v("虚拟内存 页面置换算法")]),v._v(" "),a("li",[v._v("堆和栈的区别")]),v._v(" "),a("li",[v._v("缺页中断内存抖动")])]),v._v(" "),a("h6",{attrs:{id:"进程控制-李岱融"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程控制-李岱融"}},[v._v("#")]),v._v(" 进程控制 （李岱融）")]),v._v(" "),a("ol",[a("li",[v._v("进程线程对比")]),v._v(" "),a("li",[v._v("进程间通信")]),v._v(" "),a("li",[v._v("同步互斥临界区")]),v._v(" "),a("li",[v._v("同步方法 信号量 互斥量 管程")]),v._v(" "),a("li",[v._v("进程状态 如何转换 进程调度")]),v._v(" "),a("li",[v._v("死锁 形成条件 破坏死锁")]),v._v(" "),a("li",[v._v("进程线程切换保存那些信息")]),v._v(" "),a("li",[v._v("进程上下文切换的时机 进程异常中断机制")]),v._v(" "),a("li",[v._v("用户态内核态如何切换")])]),v._v(" "),a("h4",{attrs:{id:"io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io"}},[v._v("#")]),v._v(" IO")]),v._v(" "),a("h6",{attrs:{id:"同步阻塞-同步非阻塞-异步-多路复用-朱春涛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步阻塞-同步非阻塞-异步-多路复用-朱春涛"}},[v._v("#")]),v._v(" 同步阻塞 同步非阻塞 异步 多路复用（朱春涛）")]),v._v(" "),a("h6",{attrs:{id:"多路复用-肖志强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多路复用-肖志强"}},[v._v("#")]),v._v(" 多路复用（肖志强）")]),v._v(" "),a("ol",[a("li",[v._v("甚么是多路复用(单线程处理并发的网络io)")]),v._v(" "),a("li",[v._v("select 原理 缺点")]),v._v(" "),a("li",[v._v("poll 解决了select甚么问题 原理 pollfd 缺点")]),v._v(" "),a("li",[v._v("epll 原理 如何解决用户态 内核态拷贝(mmap)的 就绪对列 fdset红黑树")]),v._v(" "),a("li",[v._v("epoll 水平触发 边沿触发")])]),v._v(" "),a("h4",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[v._v("#")]),v._v(" linux")]),v._v(" "),a("h6",{attrs:{id:"零拷贝-任基伟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#零拷贝-任基伟"}},[v._v("#")]),v._v(" 零拷贝（任基伟）")]),v._v(" "),a("ol",[a("li",[v._v("传统io流程 用户空间 内核空间")]),v._v(" "),a("li",[v._v("零拷贝原理(去掉的用户空间到内核空间的拷贝) mmap")])]),v._v(" "),a("h6",{attrs:{id:"文件系统-李岱融"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件系统-李岱融"}},[v._v("#")]),v._v(" 文件系统 （李岱融）")]),v._v(" "),a("ol",[a("li",[v._v("inoode")]),v._v(" "),a("li",[v._v("Linux软连接有了解吗， 软连接可以跨硬盘吗")])]),v._v(" "),a("h6",{attrs:{id:"指令-朱春涛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令-朱春涛"}},[v._v("#")]),v._v(" 指令 （朱春涛）")]),v._v(" "),a("ol",[a("li",[v._v("nestat")])]),v._v(" "),a("h4",{attrs:{id:"spring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring"}},[v._v("#")]),v._v(" Spring")]),v._v(" "),a("h6",{attrs:{id:"spring-ioc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-ioc"}},[v._v("#")]),v._v(" SPring ioc")]),v._v(" "),a("ol",[a("li",[v._v("控制反转概念")]),v._v(" "),a("li",[v._v("bean的生命周期")]),v._v(" "),a("li",[v._v("bean 的作用域")]),v._v(" "),a("li",[v._v("bean的加载过程")]),v._v(" "),a("li",[v._v("spring的容器启动过程")]),v._v(" "),a("li",[v._v("三级缓存解决循环依赖")]),v._v(" "),a("li",[v._v("Bean 工厂和 Application contexts")])]),v._v(" "),a("h6",{attrs:{id:"spring-aop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-aop"}},[v._v("#")]),v._v(" Spring AOP")]),v._v(" "),a("ol",[a("li",[v._v("AOP概念")]),v._v(" "),a("li",[v._v("使用场景")]),v._v(" "),a("li",[v._v("动态代理 cglib 与 jdk 对比")]),v._v(" "),a("li",[v._v("AspectJ")])]),v._v(" "),a("h6",{attrs:{id:"spring的事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring的事务"}},[v._v("#")]),v._v(" Spring的事务")]),v._v(" "),a("ol",[a("li",[v._v("事务的传播行为")]),v._v(" "),a("li",[v._v("事务的隔离级别")]),v._v(" "),a("li",[v._v("配置声明式事务")])]),v._v(" "),a("h6",{attrs:{id:"spring-mvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc"}},[v._v("#")]),v._v(" Spring mvc")]),v._v(" "),a("ol",[a("li",[v._v("核心组件")]),v._v(" "),a("li",[v._v("交互流程")])]),v._v(" "),a("h4",{attrs:{id:"项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目"}},[v._v("#")]),v._v(" 项目")]),v._v(" "),a("h6",{attrs:{id:"oauth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oauth"}},[v._v("#")]),v._v(" OAuth")]),v._v(" "),a("ol",[a("li",[v._v("产生原因")]),v._v(" "),a("li",[v._v("基本原理应用场景 协议流程")]),v._v(" "),a("li",[v._v("客户端授权模式--(四种核心看授权码模式原理)")]),v._v(" "),a("li",[v._v("授权码模式原理access_token过期怎么办")])]),v._v(" "),a("h6",{attrs:{id:"websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[v._v("#")]),v._v(" websocket")]),v._v(" "),a("ol",[a("li",[v._v("如何发送离线消息保证消息有序到达")]),v._v(" "),a("li",[v._v("网络抖动")]),v._v(" "),a("li",[v._v("弱网络")]),v._v(" "),a("li",[v._v("心跳机制")])]),v._v(" "),a("h6",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[v._v("#")]),v._v(" nginx")]),v._v(" "),a("ol",[a("li",[v._v("正向代理 反向代理")]),v._v(" "),a("li",[v._v("轮询策略")])]),v._v(" "),a("h6",{attrs:{id:"springboot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot"}},[v._v("#")]),v._v(" Springboot")]),v._v(" "),a("ol",[a("li",[v._v("自启动原理")])]),v._v(" "),a("h6",{attrs:{id:"quartz"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quartz"}},[v._v("#")]),v._v(" Quartz")]),v._v(" "),a("ol",[a("li",[v._v("核心对象 工作原理")]),v._v(" "),a("li",[v._v("job和trigger的两种关联模式 基于datamap和数据库")]),v._v(" "),a("li",[v._v("timer与Quartz对比")]),v._v(" "),a("li",[v._v("集群调度方案")])]),v._v(" "),a("h6",{attrs:{id:"javamail邮件协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javamail邮件协议"}},[v._v("#")]),v._v(" JavaMail邮件协议")]),v._v(" "),a("ol",[a("li",[v._v("STMP邮件协议")])]),v._v(" "),a("h6",{attrs:{id:"jwt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt"}},[v._v("#")]),v._v(" jwt")]),v._v(" "),a("ol",[a("li",[v._v("组成")]),v._v(" "),a("li",[v._v("原理")]),v._v(" "),a("li",[v._v("场景 优点不足")])]),v._v(" "),a("h4",{attrs:{id:"消息对列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息对列"}},[v._v("#")]),v._v(" 消息对列")]),v._v(" "),a("h6",{attrs:{id:"kafka"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kafka"}},[v._v("#")]),v._v(" Kafka")]),v._v(" "),a("ol",[a("li",[v._v("架构")]),v._v(" "),a("li",[v._v("文件存储 topic 与partion log segment 这些之间得关系")]),v._v(" "),a("li",[v._v("生产者 分区策略 生产者的数据可靠性 精准一次 幂等性")]),v._v(" "),a("li",[v._v("消费者 pull push 分区 offset")]),v._v(" "),a("li",[v._v("zookeeper在kafak中的作用")])]),v._v(" "),a("ul",[a("li",[v._v("补充")])]),v._v(" "),a("ol",[a("li",[a("p",[v._v("为什么使用消息队列？解耦 异步 削峰")])]),v._v(" "),a("li",[a("p",[v._v("使用消息队列有什么缺点？ 系统可用性降低(消息对列会挂) 系统复杂性增加(消息对列的的一致性重复消费等..)")])]),v._v(" "),a("li",[a("p",[v._v("消息队列如何选型？")])]),v._v(" "),a("li",[a("p",[v._v("如何保证消息队列是高可用的？集群")])]),v._v(" "),a("li",[a("p",[v._v("如何保证消息不被重复消费？")])]),v._v(" "),a("li",[a("p",[v._v("如何保证消费的可靠性传输？生产者弄丢数据 消息队列弄丢数据 消费者弄丢数据")])]),v._v(" "),a("li",[a("p",[v._v("如何保证消息的顺序性？")])]),v._v(" "),a("li",[a("p",[v._v("Kafka中的ISR、AR又代表什么？ISR的伸缩又指什么?")])]),v._v(" "),a("li",[a("p",[v._v("什么情况下一个 broker 会从 isr中踢出去?")])])]),v._v(" "),a("h4",{attrs:{id:"zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[v._v("#")]),v._v(" zookeeper")]),v._v(" "),a("h6",{attrs:{id:"集群构架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群构架"}},[v._v("#")]),v._v(" 集群构架")]),v._v(" "),a("h6",{attrs:{id:"zab协议-2pc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zab协议-2pc"}},[v._v("#")]),v._v(" zab协议 2pc")]),v._v(" "),a("h6",{attrs:{id:"实现分布式锁-什么分布式锁-数据库-redis-zookper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现分布式锁-什么分布式锁-数据库-redis-zookper"}},[v._v("#")]),v._v(" 实现分布式锁( 什么分布式锁 数据库 redis zookper)")]),v._v(" "),a("h6",{attrs:{id:"leader-选举-paxos协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leader-选举-paxos协议"}},[v._v("#")]),v._v(" leader 选举 paxos协议")]),v._v(" "),a("h5",{attrs:{id:"分布式补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式补充"}},[v._v("#")]),v._v(" 分布式补充")]),v._v(" "),a("ol",[a("li",[v._v("raft协议与redis哨兵选出哨兵的leader")]),v._v(" "),a("li",[v._v("2pc 3pc")]),v._v(" "),a("li",[v._v("cap与base")])]),v._v(" "),a("h4",{attrs:{id:"java基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java基础"}},[v._v("#")]),v._v(" Java基础")]),v._v(" "),a("h6",{attrs:{id:"集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[v._v("#")]),v._v(" 集合")]),v._v(" "),a("ol",[a("li",[v._v("Hashmap")]),v._v(" "),a("li",[v._v("Arraylist")]),v._v(" "),a("li",[v._v("hashtable")]),v._v(" "),a("li",[v._v("linledlist")])]),v._v(" "),a("h6",{attrs:{id:"反射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射"}},[v._v("#")]),v._v(" 反射")]),v._v(" "),a("ol",[a("li",[v._v("什么是反射 优点 不足")]),v._v(" "),a("li",[v._v("作用到了哪里")])])])}),[],!1,null,null,null);_.default=s.exports}}]);
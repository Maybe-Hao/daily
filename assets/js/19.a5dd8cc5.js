(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{487:function(a,n,s){"use strict";s.r(n);var t=s(38),e=Object(t.a)({},(function(){var a=this,n=a.$createElement,s=a._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"spring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring"}},[a._v("#")]),a._v(" Spring")]),a._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),s("p",[a._v("1、Spring是一个开源免费的框架 , 容器  .")]),a._v(" "),s("p",[a._v("2、Spring是一个轻量级的框架 , 非侵入式的 .")]),a._v(" "),s("p",[s("strong",[a._v("3、控制反转 IoC  , 面向切面 Aop")])]),a._v(" "),s("p",[a._v("4、对事物的支持 , 对框架的支持")]),a._v(" "),s("h2",{attrs:{id:"流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[a._v("#")]),a._v(" 流程")]),a._v(" "),s("p",[a._v("首先在 pom.xml中添加依赖，添加spring框架")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.springframework"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring-webmvc"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("5.3.8"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v("创建pojo下的bean对象")]),a._v(" "),s("p",[a._v("然后在xml中写入bean")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd">\n\n    \x3c!--bean就是java对象 此处相当于 New了一个Hello, 由Spring创建和管理--\x3e\n    \x3c!--    Hello  hello=new Hello();--\x3e\n    \x3c!--    类型 变量名 =new 类型（）--\x3e\n    \x3c!--    id=变量名--\x3e\n    \x3c!--    class=new 的对象--\x3e\n    \x3c!--    property 相当于属性的赋值--\x3e\n    \x3c!--    用到了控制反转,调用了Hello.java中的set方法--\x3e\n    <bean id="user" class="com.hao.pojo.User">\n        <property name="name" value="李浩"/>\n    </bean>\n\n</beans>\n')])])]),s("p",[a._v("注意：")]),a._v(" "),s("p",[a._v("Spring默认是无参构造。")]),a._v(" "),s("p",[a._v("若要使用有参构造函数贼不能用上述方法，可以使用下标的方式")]),a._v(" "),s("p",[a._v("此时bean为")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("public User(String name){\nthis.name=name;\n}\n")])])]),s("p",[a._v("xml为（注意index是从0开始）")]),a._v(" "),s("p",[a._v("方法一：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<bean id="user" class="com.hao.pojo.User">\n    <constructor-arg index="0" value="李浩学java"/>\n</bean>\n')])])]),s("p",[a._v("方法二：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<bean id="user" class="com.hao.pojo.User">\n    <constructor-arg type="java.lang.String" value="李浩学java"/>\n</bean>\n')])])]),s("p",[s("strong",[a._v("注意：本方式通过类型创建，若两个string类可能会出错，且String类要写成java.lang.String,int可以直接用int")])]),a._v(" "),s("p",[a._v("方法三：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<bean id="user" class="com.hao.pojo.User">\n    <constructor-arg name="name" value="李浩学java"/>\n</bean>\n')])])]),s("p",[a._v("直接通过参数名来赋值，第一个name就是user的name属性名")]),a._v(" "),s("h2",{attrs:{id:"di注入各种类型数据的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#di注入各种类型数据的方法"}},[a._v("#")]),a._v(" DI注入各种类型数据的方法")]),a._v(" "),s("h3",{attrs:{id:"对应的bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对应的bean"}},[a._v("#")]),a._v(" 对应的bean")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('package com.hao.pojo;\n\nimport com.hao.pojo.Address;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.Set;\n\npublic class Student {\n\n    private String name;\n    private Address address;\n    private String[] books;\n    private List<String> hobbys;\n    private Map<String,String> card;\n    private Set<String> games;\n    private String wife;\n    private Properties info;\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setAddress(Address address) {\n        this.address = address;\n    }\n\n    public void setBooks(String[] books) {\n        this.books = books;\n    }\n\n    public void setHobbys(List<String> hobbys) {\n        this.hobbys = hobbys;\n    }\n\n    public void setCard(Map<String, String> card) {\n        this.card = card;\n    }\n\n    public void setGames(Set<String> games) {\n        this.games = games;\n    }\n\n    public void setWife(String wife) {\n        this.wife = wife;\n    }\n\n    public void setInfo(Properties info) {\n        this.info = info;\n    }\n\n    public void show(){\n        System.out.println("name="+ name\n                + ",address="+ address.getAddress()\n                + ",books="\n        );\n        for (String book:books){\n            System.out.print("<<"+book+">>\\t");\n        }\n        System.out.println("\\n爱好:"+hobbys);\n\n        System.out.println("card:"+card);\n\n        System.out.println("games:"+games);\n\n        System.out.println("wife:"+wife);\n\n        System.out.println("info:"+info);\n\n    }\n}\n')])])]),s("h3",{attrs:{id:"xml配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xml配置"}},[a._v("#")]),a._v(" xml配置")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd">\n\n    \x3c!--bean就是java对象 此处相当于 New了一个Hello, 由Spring创建和管理--\x3e\n    \x3c!--    Hello  hello=new Hello();--\x3e\n    \x3c!--    类型 变量名 =new 类型（）--\x3e\n    \x3c!--    id=变量名--\x3e\n    \x3c!--    class=new 的对象--\x3e\n    \x3c!--    property 相当于属性的赋值--\x3e\n    \x3c!--    用到了控制反转,调用了Hello.java中的set方法--\x3e\n    <bean id="address" class="com.hao.pojo.Address"/>\n    <bean id="student" class="com.hao.pojo.Student">\n        <property name="name" value="李浩"/>\n        <property name="address" ref="address"/>\n        \x3c!--数组注入--\x3e\n        <property name="books">\n            <array>\n                <value>红楼梦</value>\n                <value>西游记</value>\n                <value>水浒传</value>\n                <value>三国演义</value>\n            </array>\n        </property>\n        \x3c!--list注入--\x3e\n        <property name="hobbys">\n            <list>\n                <value>听歌</value>\n                <value>敲代码</value>\n                <value>看电影</value>\n            </list>\n        </property>\n        \x3c!--Map--\x3e\n        <property name="card">\n            <map>\n                <entry key="身份证" value="241231231"/>\n                <entry key="银行卡" value="1234123123123"/>\n            </map>\n        </property>\n\n        \x3c!--Set--\x3e\n        <property name="games">\n        <set>\n            <value>LOL</value>\n            <value>COC</value>\n            <value>BOB</value>\n        </set>\n        </property>\n\n        \x3c!--null--\x3e\n        <property name="wife">\n            <null></null>\n        </property>\n\n        \x3c!--Properties--\x3e\n        <property name="info">\n            <props>\n                <prop key="driver">2019051162</prop>\n                <prop key="username">李浩</prop>\n                <prop key="sex">男</prop>\n            </props>\n        </property>\n    </bean>\n\n</beans>\n')])])]),s("h3",{attrs:{id:"p命名空间注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p命名空间注入"}},[a._v("#")]),a._v(" P命名空间注入")]),a._v(" "),s("p",[a._v("使用前提：")]),a._v(" "),s("p",[a._v("P命名空间注入 : 需要在头文件中加入约束文件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(' 导入约束 : xmlns:p="http://www.springframework.org/schema/p"\n')])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<bean id="user" class="com.hao.pojo.User" p:age="23"/>\n')])])]),s("h2",{attrs:{id:"spring注解开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring注解开发"}},[a._v("#")]),a._v(" Spring注解开发")]),a._v(" "),s("p",[a._v("在pojo中注入时使用@Value()")]),a._v(" "),s("p",[a._v("在dao层中注入时使用@Repository")]),a._v(" "),s("p",[a._v("两者作用相同")]),a._v(" "),s("h2",{attrs:{id:"动态代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态代理"}},[a._v("#")]),a._v(" 动态代理-")]),a._v(" "),s("h1",{attrs:{id:"必记单词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#必记单词"}},[a._v("#")]),a._v(" 必记单词")]),a._v(" "),s("p",[a._v("Scope 作用域")]),a._v(" "),s("h1",{attrs:{id:"问题及解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题及解决"}},[a._v("#")]),a._v(" 问题及解决")]),a._v(" "),s("p",[a._v("问题\n"),s("img",{attrs:{src:a.$withBase("/assets/img/image-20210802103511832.png")}}),a._v(" "),s("img",{attrs:{src:a.$withBase("/assets/img/image-20210802103529797.png")}})]),a._v(" "),s("p",[a._v("原因：\n"),s("img",{attrs:{src:a.$withBase("/assets/img/image-20210802103448906.png")}})]),a._v(" "),s("p",[a._v("解决：在mybatis的配置文件中，将useSSL=true改为useSSL=false即可正确解决问题。")])])}),[],!1,null,null,null);n.default=e.exports}}]);
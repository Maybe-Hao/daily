(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{463:function(a,t,s){a.exports=s.p+"assets/img/image-20210916210603945.0bffded6.png"},489:function(a,t,s){"use strict";s.r(t);var r=s(38),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"springboot"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot"}},[a._v("#")]),a._v(" SpringBoot")]),a._v(" "),r("h2",{attrs:{id:"typora快捷键"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#typora快捷键"}},[a._v("#")]),a._v(" Typora快捷键")]),a._v(" "),r("img",{attrs:{src:a.$withBase("/assets/img/image-20210910090850850.png")}}),a._v("\n![image-20210910090850850](../.vuepress/public/assets/img/image-20210910090850850.png)\n"),r("h2",{attrs:{id:"yaml"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#yaml"}},[a._v("#")]),a._v(" yaml")]),a._v(" "),r("img",{attrs:{src:a.$withBase("/assets/img/image-20210915211327057.png")}}),a._v("\n![image-20210915211327057](../.vuepress/public/assets/img/image-20210915211327057.png)\n"),r("img",{attrs:{src:a.$withBase("/assets/img/image-20210915211339368.png")}}),a._v("\n![image-20210915211339368](../.vuepress/public/assets/img/image-20210915211339368.png)\n"),r("p",[a._v("在pojo类中使用了注解@ConfigurationProperties，配置后会有提示，"),r("strong",[a._v("如果不配置会爆红，但并不影响运行！")])]),a._v(" "),r("h3",{attrs:{id:"random"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#random"}},[a._v("#")]),a._v(" ${random}")]),a._v(" "),r("p",[a._v("Spring Boot的属性配置文件中可以通过${random}来产生int值、long值、string字符串或者UUID，来支持属性的随机值。从配置文件中获取符合规则的随机数。")]),a._v(" "),r("img",{attrs:{src:a.$withBase("/assets/img/image-20210915212916108.png")}}),a._v("\n![image-20210915212916108](../.vuepress/public/assets/img/image-20210915212916108.png)\n"),r("p",[a._v("￥{person.hello:hello}意思是，如果person.hello存在，那么就以存在的person.hello为值，若不存在则使用默认值“hello”，默认值就是冒号后的值。")]),a._v(" "),r("h2",{attrs:{id:"jsr303校验"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jsr303校验"}},[a._v("#")]),a._v(" JSR303校验")]),a._v(" "),r("p",[a._v("CSDN介绍网址：https://blog.csdn.net/weixin_44440642/article/details/106335653")]),a._v(" "),r("h2",{attrs:{id:"springboot自动装配原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot自动装配原理"}},[a._v("#")]),a._v(" SpringBoot自动装配原理")]),a._v(" "),r("p",[a._v("SpringBoot启动时，会加载大量的")]),a._v(" "),r("p",[a._v("每一个"),r("strong",[a._v("xxxAutoConfiguration")]),a._v("类都是容器中的一个组件，最后都加入到容器中自动配置")]),a._v(" "),r("p",[a._v("每一个自动配置的类可以进行自动配置功能；")]),a._v(" "),r("p",[a._v("一旦这个配置类生效，这个配置类就会给容器中添加各种组件，这些组建的属性是对从对应的properties类中获取，"),r("strong",[a._v("这些类的属性可以通过yaml配置文件更改")])]),a._v(" "),r("p",[a._v("所有在配置文件中能配置的属性都是在"),r("strong",[a._v("xxxProperties")]),a._v("类中封装了的")]),a._v(" "),r("p",[a._v("精髓：")]),a._v(" "),r("img",{attrs:{src:a.$withBase("/assets/img/image-20210916204730750.png")}}),a._v("\n![image-20210916204730750](../.vuepress/public/assets/img/image-20210916204730750.png)\n"),r("h2",{attrs:{id:"springboot-web开发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot-web开发"}},[a._v("#")]),a._v(" SpringBoot Web开发")]),a._v(" "),r("p",[a._v("jar:webapp!")]),a._v(" "),r("p",[a._v("自动装配")]),a._v(" "),r("p",[a._v("1.创建应用，选择模块")]),a._v(" "),r("p",[a._v("SpringBoot帮我们配置了什么？能不能修改？能修改什么？能不能扩展？")]),a._v(" "),r("p",[a._v("xxxAutoConfiguration 向容器中自动配置组件")]),a._v(" "),r("p",[a._v("xxxProperties 自动配置类，装配配置文件中自定义的一些内容")]),a._v(" "),r("h3",{attrs:{id:"能得到静态资源的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#能得到静态资源的方法"}},[a._v("#")]),a._v(" 能得到静态资源的方法")]),a._v(" "),r("h4",{attrs:{id:"_1-webjars"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-webjars"}},[a._v("#")]),a._v(" 1.webjars")]),a._v(" "),r("img",{attrs:{src:s(463),alt:"image-20210916210603945"}}),a._v(" "),r("p",[a._v("进入www.webjars.org然后复制需要下载的jar的依赖")]),a._v(" "),r("p",[a._v("使用maven导入依赖")]),a._v(" "),r("p",[a._v("访问： localhost:8080/webjars/")]),a._v(" "),r("h4",{attrs:{id:"_2-public-static-resource"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-public-static-resource"}},[a._v("#")]),a._v(" 2.public,static,/**,resource")]),a._v(" "),r("p",[a._v("访问: localhost:8080/")]),a._v(" "),r("img",{attrs:{src:a.$withBase("/assets/img/image-20210916212017455.png")}}),a._v(" "),r("h3",{attrs:{id:"首页配置注意"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#首页配置注意"}},[a._v("#")]),a._v(" 首页配置注意")]),a._v(" "),r("div",{staticClass:"language-yaml extra-class"},[r("pre",{pre:!0,attrs:{class:"language-yaml"}},[r("code",[r("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("Spring")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n   "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mvc")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n     "),r("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("static-path-patter")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /res/"),r("span",{pre:!0,attrs:{class:"token important"}},[a._v("**")]),a._v("\n")])])]),r("p",[a._v("这个yaml代码可以改变静态资源访问前缀，但是会导致SpringBoot的welcome注入失败！！导致无法访问到templates下的index主页")]),a._v(" "),r("h3",{attrs:{id:"favicon-ico配置网页图标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#favicon-ico配置网页图标"}},[a._v("#")]),a._v(" favicon.ico配置网页图标")]),a._v(" "),r("p",[a._v("1.找到要做成图标的图片")]),a._v(" "),r("p",[a._v("2.找到网站将jpg或png格式转化成favicon.ico（文件名固定），然后放在static的包下，重启后即可显示图标。")])])}),[],!1,null,null,null);t.default=e.exports}}]);